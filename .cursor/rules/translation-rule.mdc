---
description: Translations
globs: 
alwaysApply: false
---
# Translation Rule for Landing Pages

**Purpose:**
This rule ensures consistency and completeness in translations between English (US) and Spanish (ES) pages, maintaining a youthful tone while preserving technical accuracy.

---

## 1. File Structure
- **Naming Convention:** `[page_name].us.yml` for English, `[page_name].es.yml` for Spanish
- **Location:** Files requiring translation are primarily found in:
  - `/src/data/course/`
  - `/src/data/location/`
  - `/src/data/page/`
  - `/src/data/plans/`
- **Excluded Directories:** Some directories do not require translations:
  - `/src/data/landing/` (English-only content)
- **Required Files:** Both `.us.yml` and `.es.yml` must exist for each translatable content

## 2. Content Guidelines

### Meta Information
- **Character Limits:**
  - Title: Max 60 characters
  - Description: Max 160 characters
  - Keywords: Max 200 characters
- **URLs:** Keep slugs language-specific (e.g., "inicio" for Spanish, "index" for English)
- **Redirects:** Include all necessary language-specific redirects

### Language Style
- **Tone:** Informal and direct
  - ✅ Use "tú" form in Spanish (e.g., "Aprende a programar")
  - ❌ Avoid "usted" form (e.g., "Aprenda a programar")
- **Target Audience:** 18-25 year olds
- **Technical Terms:** Keep consistent across languages
  - Example: "bootcamp", "JavaScript", "Python" remain unchanged

### Component Requirements
- **Structure:** 
  - Maintain identical component order between language versions
  - Components present in the English version should have corresponding translations in Spanish
  - Not all pages require the same components; structure depends on the content type
  - When adding new components, ensure they exist in both language versions

## 3. Quality Control
- **Pre-commit Checks:**
  1. Verify components in English version have corresponding translations
  2. Check character limits for meta tags
  3. Ensure all links are working and language-appropriate
  4. Validate YAML syntax

- **Testing:**
  ```bash
  npm run test  # Run after translation to validate content
  npm run build # Execute only after successful test
  ```

## 4. Examples

### Meta Description
✅ Good (Spanish):
```yaml
description: "El bootcamp #1 con más de 6,000 graduados y soporte profesional de por vida. Bootcamp en USA, España, Portugal, Alemania, Chile y Venezuela."
```
❌ Bad (Spanish):
```yaml
description: "El bootcamp número uno de programación con más de seis mil graduados y soporte profesional de por vida. Ofrecemos programas en los Estados Unidos, España, Portugal, Alemania, Chile y Venezuela con la mejor calidad."  # Too long
```

### Informal Tone
✅ Good:
```yaml
sub_heading: "Queremos que te concentres en lo importante: aprender, crecer y lanzar tu carrera tech"
```
❌ Bad:
```yaml
sub_heading: "Deseamos que usted se concentre en lo importante: el aprendizaje, crecimiento y lanzamiento de su carrera tech"
```

## 5. Enforcement
- Code review required for all translation changes
- Automated tests must pass before merge
- Build must complete successfully
- Character count validation in CI/CD pipeline

---

**Version:** v1.1, 2024-03-21
